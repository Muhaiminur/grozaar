///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class OrderDetailsResponseDataOrderOrderHistories {
/*
{
  "status_title": "Pending",
  "status": true
}
*/

  String? statusTitle;
  bool? status;

  OrderDetailsResponseDataOrderOrderHistories({
    this.statusTitle,
    this.status,
  });
  OrderDetailsResponseDataOrderOrderHistories.fromJson(Map<String, dynamic> json) {
    statusTitle = json['status_title']?.toString();
    status = json['status'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status_title'] = statusTitle;
    data['status'] = status;
    return data;
  }
}

class OrderDetailsResponseDataOrderCustomer {
/*
{
  "id": 12,
  "email": "nuruzzaman.himel147@gmail.com",
  "phone": "01622-819925",
  "type": "Customer",
  "avatar_url": "https://inventory.grozaarbd.com/storage/users/1747549497_1986011939_12.jpg",
  "full_name": "rest live ",
  "total_order_amount": "739.84",
  "total_paid_amount": "0.00",
  "total_due_amount": "739.84"
}
*/

  String? id;
  String? email;
  String? phone;
  String? type;
  String? avatarUrl;
  String? fullName;
  String? totalOrderAmount;
  String? totalPaidAmount;
  String? totalDueAmount;

  OrderDetailsResponseDataOrderCustomer({
    this.id,
    this.email,
    this.phone,
    this.type,
    this.avatarUrl,
    this.fullName,
    this.totalOrderAmount,
    this.totalPaidAmount,
    this.totalDueAmount,
  });
  OrderDetailsResponseDataOrderCustomer.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    type = json['type']?.toString();
    avatarUrl = json['avatar_url']?.toString();
    fullName = json['full_name']?.toString();
    totalOrderAmount = json['total_order_amount']?.toString();
    totalPaidAmount = json['total_paid_amount']?.toString();
    totalDueAmount = json['total_due_amount']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['email'] = email;
    data['phone'] = phone;
    data['type'] = type;
    data['avatar_url'] = avatarUrl;
    data['full_name'] = fullName;
    data['total_order_amount'] = totalOrderAmount;
    data['total_paid_amount'] = totalPaidAmount;
    data['total_due_amount'] = totalDueAmount;
    return data;
  }
}

class OrderDetailsResponseDataOrderOrderItemsWarehouse {
/*
{
  "id": 1,
  "name": "Main Warehouse",
  "code": "MWH",
  "company_name": null,
  "address": "123 Main St, Anytown, USA",
  "phone": "555-1234",
  "email": "d0BZt@example.com",
  "contact": null,
  "image": null,
  "is_default": true,
  "status": "active",
  "created_by": null,
  "updated_by": null,
  "created_at": "2025-04-24T02:25:21.000000Z",
  "updated_at": "2025-04-24T02:25:21.000000Z",
  "status_badge": "<span class=\"badge bg-success\">ACTIVE</span>"
}
*/

  String? id;
  String? name;
  String? code;
  String? companyName;
  String? address;
  String? phone;
  String? email;
  String? contact;
  String? image;
  bool? isDefault;
  String? status;
  String? createdBy;
  String? updatedBy;
  String? createdAt;
  String? updatedAt;
  String? statusBadge;

  OrderDetailsResponseDataOrderOrderItemsWarehouse({
    this.id,
    this.name,
    this.code,
    this.companyName,
    this.address,
    this.phone,
    this.email,
    this.contact,
    this.image,
    this.isDefault,
    this.status,
    this.createdBy,
    this.updatedBy,
    this.createdAt,
    this.updatedAt,
    this.statusBadge,
  });
  OrderDetailsResponseDataOrderOrderItemsWarehouse.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
    code = json['code']?.toString();
    companyName = json['company_name']?.toString();
    address = json['address']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    contact = json['contact']?.toString();
    image = json['image']?.toString();
    isDefault = json['is_default'];
    status = json['status']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    statusBadge = json['status_badge']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['code'] = code;
    data['company_name'] = companyName;
    data['address'] = address;
    data['phone'] = phone;
    data['email'] = email;
    data['contact'] = contact;
    data['image'] = image;
    data['is_default'] = isDefault;
    data['status'] = status;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['status_badge'] = statusBadge;
    return data;
  }
}

class OrderDetailsResponseDataOrderOrderItemsProductRating {
/*
{
  "averageRating": "1.5",
  "totalReviewCount": 1
}
*/

  String? averageRating;
  String? totalReviewCount;

  OrderDetailsResponseDataOrderOrderItemsProductRating({
    this.averageRating,
    this.totalReviewCount,
  });
  OrderDetailsResponseDataOrderOrderItemsProductRating.fromJson(Map<String, dynamic> json) {
    averageRating = json['averageRating']?.toString();
    totalReviewCount = json['totalReviewCount']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['averageRating'] = averageRating;
    data['totalReviewCount'] = totalReviewCount;
    return data;
  }
}

class OrderDetailsResponseDataOrderOrderItemsProductTaxes {
/*
{
  "has_tax": "1",
  "tax_amount": "2"
}
*/

  String? hasTax;
  String? taxAmount;

  OrderDetailsResponseDataOrderOrderItemsProductTaxes({
    this.hasTax,
    this.taxAmount,
  });
  OrderDetailsResponseDataOrderOrderItemsProductTaxes.fromJson(Map<String, dynamic> json) {
    hasTax = json['has_tax']?.toString();
    taxAmount = json['tax_amount']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['has_tax'] = hasTax;
    data['tax_amount'] = taxAmount;
    return data;
  }
}

class OrderDetailsResponseDataOrderOrderItemsProduct {
/*
{
  "id": 1,
  "product_condition_id": null,
  "category_id": "1",
  "brand_id": "1",
  "product_unit_id": "1",
  "name": "Organic Whole Atta.b",
  "image": "products/1748152728_1803200900_1.png",
  "sku": "223423",
  "barcode": "17454838712",
  "barcode_image": "products/barcode/223423_17454838712.png",
  "purchase_price": "20.50",
  "sale_price": "20.91",
  "restaurant_sale_price": "20.71",
  "status": "active",
  "total_stock_quantity": "2083",
  "low_stock_alert": "0",
  "is_variant": "0",
  "available_for": "Both",
  "is_split_sale": "1",
  "taxes": {
    "has_tax": "1",
    "tax_amount": "2"
  },
  "meta": null,
  "deleted_at": null,
  "created_by": "1",
  "updated_by": "1",
  "created_at": "2025-04-24T08:38:27.000000Z",
  "updated_at": "2025-05-27T00:34:10.000000Z",
  "image_url": "https://inventory.grozaarbd.com/storage/products/1748152728_1803200900_1.png",
  "barcode_image_url": "https://inventory.grozaarbd.com/storage/products/barcode/223423_17454838712.png",
  "rating": {
    "averageRating": "1.5",
    "totalReviewCount": 1
  },
  "created_at_human": "1 month"
}
*/

  String? id;
  String? productConditionId;
  String? categoryId;
  String? brandId;
  String? productUnitId;
  String? name;
  String? image;
  String? sku;
  String? barcode;
  String? barcodeImage;
  String? purchasePrice;
  String? salePrice;
  String? restaurantSalePrice;
  String? status;
  String? totalStockQuantity;
  String? lowStockAlert;
  String? isVariant;
  String? availableFor;
  String? isSplitSale;
  OrderDetailsResponseDataOrderOrderItemsProductTaxes? taxes;
  String? meta;
  String? deletedAt;
  String? createdBy;
  String? updatedBy;
  String? createdAt;
  String? updatedAt;
  String? imageUrl;
  String? barcodeImageUrl;
  OrderDetailsResponseDataOrderOrderItemsProductRating? rating;
  String? createdAtHuman;

  OrderDetailsResponseDataOrderOrderItemsProduct({
    this.id,
    this.productConditionId,
    this.categoryId,
    this.brandId,
    this.productUnitId,
    this.name,
    this.image,
    this.sku,
    this.barcode,
    this.barcodeImage,
    this.purchasePrice,
    this.salePrice,
    this.restaurantSalePrice,
    this.status,
    this.totalStockQuantity,
    this.lowStockAlert,
    this.isVariant,
    this.availableFor,
    this.isSplitSale,
    this.taxes,
    this.meta,
    this.deletedAt,
    this.createdBy,
    this.updatedBy,
    this.createdAt,
    this.updatedAt,
    this.imageUrl,
    this.barcodeImageUrl,
    this.rating,
    this.createdAtHuman,
  });
  OrderDetailsResponseDataOrderOrderItemsProduct.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    productConditionId = json['product_condition_id']?.toString();
    categoryId = json['category_id']?.toString();
    brandId = json['brand_id']?.toString();
    productUnitId = json['product_unit_id']?.toString();
    name = json['name']?.toString();
    image = json['image']?.toString();
    sku = json['sku']?.toString();
    barcode = json['barcode']?.toString();
    barcodeImage = json['barcode_image']?.toString();
    purchasePrice = json['purchase_price']?.toString();
    salePrice = json['sale_price']?.toString();
    restaurantSalePrice = json['restaurant_sale_price']?.toString();
    status = json['status']?.toString();
    totalStockQuantity = json['total_stock_quantity']?.toString();
    lowStockAlert = json['low_stock_alert']?.toString();
    isVariant = json['is_variant']?.toString();
    availableFor = json['available_for']?.toString();
    isSplitSale = json['is_split_sale']?.toString();
    taxes = (json['taxes'] != null && (json['taxes'] is Map)) ? OrderDetailsResponseDataOrderOrderItemsProductTaxes.fromJson(json['taxes']) : null;
    meta = json['meta']?.toString();
    deletedAt = json['deleted_at']?.toString();
    createdBy = json['created_by']?.toString();
    updatedBy = json['updated_by']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    imageUrl = json['image_url']?.toString();
    barcodeImageUrl = json['barcode_image_url']?.toString();
    rating = (json['rating'] != null && (json['rating'] is Map)) ? OrderDetailsResponseDataOrderOrderItemsProductRating.fromJson(json['rating']) : null;
    createdAtHuman = json['created_at_human']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['product_condition_id'] = productConditionId;
    data['category_id'] = categoryId;
    data['brand_id'] = brandId;
    data['product_unit_id'] = productUnitId;
    data['name'] = name;
    data['image'] = image;
    data['sku'] = sku;
    data['barcode'] = barcode;
    data['barcode_image'] = barcodeImage;
    data['purchase_price'] = purchasePrice;
    data['sale_price'] = salePrice;
    data['restaurant_sale_price'] = restaurantSalePrice;
    data['status'] = status;
    data['total_stock_quantity'] = totalStockQuantity;
    data['low_stock_alert'] = lowStockAlert;
    data['is_variant'] = isVariant;
    data['available_for'] = availableFor;
    data['is_split_sale'] = isSplitSale;
    if (taxes != null) {
      data['taxes'] = taxes!.toJson();
    }
    data['meta'] = meta;
    data['deleted_at'] = deletedAt;
    data['created_by'] = createdBy;
    data['updated_by'] = updatedBy;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['image_url'] = imageUrl;
    data['barcode_image_url'] = barcodeImageUrl;
    if (rating != null) {
      data['rating'] = rating!.toJson();
    }
    data['created_at_human'] = createdAtHuman;
    return data;
  }
}

class OrderDetailsResponseDataOrderOrderItems {
/*
{
  "id": 11,
  "order_id": "7",
  "product_id": "1",
  "warehouse_id": "1",
  "warehouse_stock_id": "6",
  "product_name": "Organic Whole Atta.b",
  "product_sku": "223423",
  "product_barcode": "17454838712",
  "quantity": "10",
  "price": "20.91",
  "discount": "0",
  "discount_type": "",
  "sub_total": "209.10",
  "product": {
    "id": 1,
    "product_condition_id": null,
    "category_id": "1",
    "brand_id": "1",
    "product_unit_id": "1",
    "name": "Organic Whole Atta.b",
    "image": "products/1748152728_1803200900_1.png",
    "sku": "223423",
    "barcode": "17454838712",
    "barcode_image": "products/barcode/223423_17454838712.png",
    "purchase_price": "20.50",
    "sale_price": "20.91",
    "restaurant_sale_price": "20.71",
    "status": "active",
    "total_stock_quantity": "2083",
    "low_stock_alert": "0",
    "is_variant": "0",
    "available_for": "Both",
    "is_split_sale": "1",
    "taxes": {
      "has_tax": "1",
      "tax_amount": "2"
    },
    "meta": null,
    "deleted_at": null,
    "created_by": "1",
    "updated_by": "1",
    "created_at": "2025-04-24T08:38:27.000000Z",
    "updated_at": "2025-05-27T00:34:10.000000Z",
    "image_url": "https://inventory.grozaarbd.com/storage/products/1748152728_1803200900_1.png",
    "barcode_image_url": "https://inventory.grozaarbd.com/storage/products/barcode/223423_17454838712.png",
    "rating": {
      "averageRating": "1.5",
      "totalReviewCount": 1
    },
    "created_at_human": "1 month"
  },
  "warehouse": {
    "id": 1,
    "name": "Main Warehouse",
    "code": "MWH",
    "company_name": null,
    "address": "123 Main St, Anytown, USA",
    "phone": "555-1234",
    "email": "d0BZt@example.com",
    "contact": null,
    "image": null,
    "is_default": true,
    "status": "active",
    "created_by": null,
    "updated_by": null,
    "created_at": "2025-04-24T02:25:21.000000Z",
    "updated_at": "2025-04-24T02:25:21.000000Z",
    "status_badge": "<span class=\"badge bg-success\">ACTIVE</span>"
  }
}
*/

  String? id;
  String? orderId;
  String? productId;
  String? warehouseId;
  String? warehouseStockId;
  String? productName;
  String? productSku;
  String? productBarcode;
  String? quantity;
  String? price;
  String? discount;
  String? discountType;
  String? subTotal;
  OrderDetailsResponseDataOrderOrderItemsProduct? product;
  OrderDetailsResponseDataOrderOrderItemsWarehouse? warehouse;

  OrderDetailsResponseDataOrderOrderItems({
    this.id,
    this.orderId,
    this.productId,
    this.warehouseId,
    this.warehouseStockId,
    this.productName,
    this.productSku,
    this.productBarcode,
    this.quantity,
    this.price,
    this.discount,
    this.discountType,
    this.subTotal,
    this.product,
    this.warehouse,
  });
  OrderDetailsResponseDataOrderOrderItems.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    orderId = json['order_id']?.toString();
    productId = json['product_id']?.toString();
    warehouseId = json['warehouse_id']?.toString();
    warehouseStockId = json['warehouse_stock_id']?.toString();
    productName = json['product_name']?.toString();
    productSku = json['product_sku']?.toString();
    productBarcode = json['product_barcode']?.toString();
    quantity = json['quantity']?.toString();
    price = json['price']?.toString();
    discount = json['discount']?.toString();
    discountType = json['discount_type']?.toString();
    subTotal = json['sub_total']?.toString();
    product = (json['product'] != null && (json['product'] is Map)) ? OrderDetailsResponseDataOrderOrderItemsProduct.fromJson(json['product']) : null;
    warehouse = (json['warehouse'] != null && (json['warehouse'] is Map)) ? OrderDetailsResponseDataOrderOrderItemsWarehouse.fromJson(json['warehouse']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['order_id'] = orderId;
    data['product_id'] = productId;
    data['warehouse_id'] = warehouseId;
    data['warehouse_stock_id'] = warehouseStockId;
    data['product_name'] = productName;
    data['product_sku'] = productSku;
    data['product_barcode'] = productBarcode;
    data['quantity'] = quantity;
    data['price'] = price;
    data['discount'] = discount;
    data['discount_type'] = discountType;
    data['sub_total'] = subTotal;
    if (product != null) {
      data['product'] = product!.toJson();
    }
    if (warehouse != null) {
      data['warehouse'] = warehouse!.toJson();
    }
    return data;
  }
}

class OrderDetailsResponseDataOrderShippingInfo {
/*
{
  "address": "Uttorkhan, ajompur, dhaka",
  "phone": "21233658",
  "email": "test@app.com"
}
*/

  String? address;
  String? phone;
  String? email;

  OrderDetailsResponseDataOrderShippingInfo({
    this.address,
    this.phone,
    this.email,
  });
  OrderDetailsResponseDataOrderShippingInfo.fromJson(Map<String, dynamic> json) {
    address = json['address']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['address'] = address;
    data['phone'] = phone;
    data['email'] = email;
    return data;
  }
}

class OrderDetailsResponseDataOrderBillingInfo {
/*
{
  "address": "Uttorkhan, ajompur, dhaka",
  "email": "test@app.com",
  "phone": "21233658"
}
*/

  String? address;
  String? email;
  String? phone;

  OrderDetailsResponseDataOrderBillingInfo({
    this.address,
    this.email,
    this.phone,
  });
  OrderDetailsResponseDataOrderBillingInfo.fromJson(Map<String, dynamic> json) {
    address = json['address']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['address'] = address;
    data['email'] = email;
    data['phone'] = phone;
    return data;
  }
}

class OrderDetailsResponseDataOrder {
/*
{
  "id": 7,
  "invoice_no": "INV-5008-0006",
  "date": "2025-05-25 13:05:26",
  "order_for_id": "12",
  "order_for": "Customer",
  "billing_info": {
    "address": "Uttorkhan, ajompur, dhaka",
    "email": "test@app.com",
    "phone": "21233658"
  },
  "shipping_info": {
    "address": "Uttorkhan, ajompur, dhaka",
    "phone": "21233658",
    "email": "test@app.com"
  },
  "tax_amount": "4.18",
  "discount_amount": "0.00",
  "global_discount": "0.00",
  "sub_total": "209.10",
  "time": "5 days ago",
  "price": "263.28",
  "order_items": [
    {
      "id": 11,
      "order_id": "7",
      "product_id": "1",
      "warehouse_id": "1",
      "warehouse_stock_id": "6",
      "product_name": "Organic Whole Atta.b",
      "product_sku": "223423",
      "product_barcode": "17454838712",
      "quantity": "10",
      "price": "20.91",
      "discount": "0",
      "discount_type": "",
      "sub_total": "209.10",
      "product": {
        "id": 1,
        "product_condition_id": null,
        "category_id": "1",
        "brand_id": "1",
        "product_unit_id": "1",
        "name": "Organic Whole Atta.b",
        "image": "products/1748152728_1803200900_1.png",
        "sku": "223423",
        "barcode": "17454838712",
        "barcode_image": "products/barcode/223423_17454838712.png",
        "purchase_price": "20.50",
        "sale_price": "20.91",
        "restaurant_sale_price": "20.71",
        "status": "active",
        "total_stock_quantity": "2083",
        "low_stock_alert": "0",
        "is_variant": "0",
        "available_for": "Both",
        "is_split_sale": "1",
        "taxes": {
          "has_tax": "1",
          "tax_amount": "2"
        },
        "meta": null,
        "deleted_at": null,
        "created_by": "1",
        "updated_by": "1",
        "created_at": "2025-04-24T08:38:27.000000Z",
        "updated_at": "2025-05-27T00:34:10.000000Z",
        "image_url": "https://inventory.grozaarbd.com/storage/products/1748152728_1803200900_1.png",
        "barcode_image_url": "https://inventory.grozaarbd.com/storage/products/barcode/223423_17454838712.png",
        "rating": {
          "averageRating": "1.5",
          "totalReviewCount": 1
        },
        "created_at_human": "1 month"
      },
      "warehouse": {
        "id": 1,
        "name": "Main Warehouse",
        "code": "MWH",
        "company_name": null,
        "address": "123 Main St, Anytown, USA",
        "phone": "555-1234",
        "email": "d0BZt@example.com",
        "contact": null,
        "image": null,
        "is_default": true,
        "status": "active",
        "created_by": null,
        "updated_by": null,
        "created_at": "2025-04-24T02:25:21.000000Z",
        "updated_at": "2025-04-24T02:25:21.000000Z",
        "status_badge": "<span class=\"badge bg-success\">ACTIVE</span>"
      }
    }
  ],
  "customer": {
    "id": 12,
    "email": "nuruzzaman.himel147@gmail.com",
    "phone": "01622-819925",
    "type": "Customer",
    "avatar_url": "https://inventory.grozaarbd.com/storage/users/1747549497_1986011939_12.jpg",
    "full_name": "rest live ",
    "total_order_amount": "739.84",
    "total_paid_amount": "0.00",
    "total_due_amount": "739.84"
  },
  "order_histories": [
    {
      "status_title": "Pending",
      "status": true
    }
  ],
  "status": "pending"
}
*/

  String? id;
  String? invoiceNo;
  String? date;
  String? orderForId;
  String? orderFor;
  OrderDetailsResponseDataOrderBillingInfo? billingInfo;
  OrderDetailsResponseDataOrderShippingInfo? shippingInfo;
  String? taxAmount;
  String? discountAmount;
  String? globalDiscount;
  String? subTotal;
  String? time;
  String? price;
  List<OrderDetailsResponseDataOrderOrderItems?>? orderItems;
  OrderDetailsResponseDataOrderCustomer? customer;
  List<OrderDetailsResponseDataOrderOrderHistories?>? orderHistories;
  String? status;

  OrderDetailsResponseDataOrder({
    this.id,
    this.invoiceNo,
    this.date,
    this.orderForId,
    this.orderFor,
    this.billingInfo,
    this.shippingInfo,
    this.taxAmount,
    this.discountAmount,
    this.globalDiscount,
    this.subTotal,
    this.time,
    this.price,
    this.orderItems,
    this.customer,
    this.orderHistories,
    this.status,
  });
  OrderDetailsResponseDataOrder.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    invoiceNo = json['invoice_no']?.toString();
    date = json['date']?.toString();
    orderForId = json['order_for_id']?.toString();
    orderFor = json['order_for']?.toString();
    billingInfo = (json['billing_info'] != null && (json['billing_info'] is Map)) ? OrderDetailsResponseDataOrderBillingInfo.fromJson(json['billing_info']) : null;
    shippingInfo = (json['shipping_info'] != null && (json['shipping_info'] is Map)) ? OrderDetailsResponseDataOrderShippingInfo.fromJson(json['shipping_info']) : null;
    taxAmount = json['tax_amount']?.toString();
    discountAmount = json['discount_amount']?.toString();
    globalDiscount = json['global_discount']?.toString();
    subTotal = json['sub_total']?.toString();
    time = json['time']?.toString();
    price = json['price']?.toString();
    if (json['order_items'] != null && (json['order_items'] is List)) {
      final v = json['order_items'];
      final arr0 = <OrderDetailsResponseDataOrderOrderItems>[];
      v.forEach((v) {
        arr0.add(OrderDetailsResponseDataOrderOrderItems.fromJson(v));
      });
      orderItems = arr0;
    }
    customer = (json['customer'] != null && (json['customer'] is Map)) ? OrderDetailsResponseDataOrderCustomer.fromJson(json['customer']) : null;
    if (json['order_histories'] != null && (json['order_histories'] is List)) {
      final v = json['order_histories'];
      final arr0 = <OrderDetailsResponseDataOrderOrderHistories>[];
      v.forEach((v) {
        arr0.add(OrderDetailsResponseDataOrderOrderHistories.fromJson(v));
      });
      orderHistories = arr0;
    }
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['invoice_no'] = invoiceNo;
    data['date'] = date;
    data['order_for_id'] = orderForId;
    data['order_for'] = orderFor;
    if (billingInfo != null) {
      data['billing_info'] = billingInfo!.toJson();
    }
    if (shippingInfo != null) {
      data['shipping_info'] = shippingInfo!.toJson();
    }
    data['tax_amount'] = taxAmount;
    data['discount_amount'] = discountAmount;
    data['global_discount'] = globalDiscount;
    data['sub_total'] = subTotal;
    data['time'] = time;
    data['price'] = price;
    if (orderItems != null) {
      final v = orderItems;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['order_items'] = arr0;
    }
    if (customer != null) {
      data['customer'] = customer!.toJson();
    }
    if (orderHistories != null) {
      final v = orderHistories;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['order_histories'] = arr0;
    }
    data['status'] = status;
    return data;
  }
}

class OrderDetailsResponseData {
/*
{
  "order": {
    "id": 7,
    "invoice_no": "INV-5008-0006",
    "date": "2025-05-25 13:05:26",
    "order_for_id": "12",
    "order_for": "Customer",
    "billing_info": {
      "address": "Uttorkhan, ajompur, dhaka",
      "email": "test@app.com",
      "phone": "21233658"
    },
    "shipping_info": {
      "address": "Uttorkhan, ajompur, dhaka",
      "phone": "21233658",
      "email": "test@app.com"
    },
    "tax_amount": "4.18",
    "discount_amount": "0.00",
    "global_discount": "0.00",
    "sub_total": "209.10",
    "time": "5 days ago",
    "price": "263.28",
    "order_items": [
      {
        "id": 11,
        "order_id": "7",
        "product_id": "1",
        "warehouse_id": "1",
        "warehouse_stock_id": "6",
        "product_name": "Organic Whole Atta.b",
        "product_sku": "223423",
        "product_barcode": "17454838712",
        "quantity": "10",
        "price": "20.91",
        "discount": "0",
        "discount_type": "",
        "sub_total": "209.10",
        "product": {
          "id": 1,
          "product_condition_id": null,
          "category_id": "1",
          "brand_id": "1",
          "product_unit_id": "1",
          "name": "Organic Whole Atta.b",
          "image": "products/1748152728_1803200900_1.png",
          "sku": "223423",
          "barcode": "17454838712",
          "barcode_image": "products/barcode/223423_17454838712.png",
          "purchase_price": "20.50",
          "sale_price": "20.91",
          "restaurant_sale_price": "20.71",
          "status": "active",
          "total_stock_quantity": "2083",
          "low_stock_alert": "0",
          "is_variant": "0",
          "available_for": "Both",
          "is_split_sale": "1",
          "taxes": {
            "has_tax": "1",
            "tax_amount": "2"
          },
          "meta": null,
          "deleted_at": null,
          "created_by": "1",
          "updated_by": "1",
          "created_at": "2025-04-24T08:38:27.000000Z",
          "updated_at": "2025-05-27T00:34:10.000000Z",
          "image_url": "https://inventory.grozaarbd.com/storage/products/1748152728_1803200900_1.png",
          "barcode_image_url": "https://inventory.grozaarbd.com/storage/products/barcode/223423_17454838712.png",
          "rating": {
            "averageRating": "1.5",
            "totalReviewCount": 1
          },
          "created_at_human": "1 month"
        },
        "warehouse": {
          "id": 1,
          "name": "Main Warehouse",
          "code": "MWH",
          "company_name": null,
          "address": "123 Main St, Anytown, USA",
          "phone": "555-1234",
          "email": "d0BZt@example.com",
          "contact": null,
          "image": null,
          "is_default": true,
          "status": "active",
          "created_by": null,
          "updated_by": null,
          "created_at": "2025-04-24T02:25:21.000000Z",
          "updated_at": "2025-04-24T02:25:21.000000Z",
          "status_badge": "<span class=\"badge bg-success\">ACTIVE</span>"
        }
      }
    ],
    "customer": {
      "id": 12,
      "email": "nuruzzaman.himel147@gmail.com",
      "phone": "01622-819925",
      "type": "Customer",
      "avatar_url": "https://inventory.grozaarbd.com/storage/users/1747549497_1986011939_12.jpg",
      "full_name": "rest live ",
      "total_order_amount": "739.84",
      "total_paid_amount": "0.00",
      "total_due_amount": "739.84"
    },
    "order_histories": [
      {
        "status_title": "Pending",
        "status": true
      }
    ],
    "status": "pending"
  },
  "delivery_cost": 50
}
*/

  OrderDetailsResponseDataOrder? order;
  String? deliveryCost;

  OrderDetailsResponseData({
    this.order,
    this.deliveryCost,
  });
  OrderDetailsResponseData.fromJson(Map<String, dynamic> json) {
    order = (json['order'] != null && (json['order'] is Map)) ? OrderDetailsResponseDataOrder.fromJson(json['order']) : null;
    deliveryCost = json['delivery_cost']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (order != null) {
      data['order'] = order!.toJson();
    }
    data['delivery_cost'] = deliveryCost;
    return data;
  }
}

class OrderDetailsResponse {
/*
{
  "success": true,
  "message": "Success",
  "data": {
    "order": {
      "id": 7,
      "invoice_no": "INV-5008-0006",
      "date": "2025-05-25 13:05:26",
      "order_for_id": "12",
      "order_for": "Customer",
      "billing_info": {
        "address": "Uttorkhan, ajompur, dhaka",
        "email": "test@app.com",
        "phone": "21233658"
      },
      "shipping_info": {
        "address": "Uttorkhan, ajompur, dhaka",
        "phone": "21233658",
        "email": "test@app.com"
      },
      "tax_amount": "4.18",
      "discount_amount": "0.00",
      "global_discount": "0.00",
      "sub_total": "209.10",
      "time": "5 days ago",
      "price": "263.28",
      "order_items": [
        {
          "id": 11,
          "order_id": "7",
          "product_id": "1",
          "warehouse_id": "1",
          "warehouse_stock_id": "6",
          "product_name": "Organic Whole Atta.b",
          "product_sku": "223423",
          "product_barcode": "17454838712",
          "quantity": "10",
          "price": "20.91",
          "discount": "0",
          "discount_type": "",
          "sub_total": "209.10",
          "product": {
            "id": 1,
            "product_condition_id": null,
            "category_id": "1",
            "brand_id": "1",
            "product_unit_id": "1",
            "name": "Organic Whole Atta.b",
            "image": "products/1748152728_1803200900_1.png",
            "sku": "223423",
            "barcode": "17454838712",
            "barcode_image": "products/barcode/223423_17454838712.png",
            "purchase_price": "20.50",
            "sale_price": "20.91",
            "restaurant_sale_price": "20.71",
            "status": "active",
            "total_stock_quantity": "2083",
            "low_stock_alert": "0",
            "is_variant": "0",
            "available_for": "Both",
            "is_split_sale": "1",
            "taxes": {
              "has_tax": "1",
              "tax_amount": "2"
            },
            "meta": null,
            "deleted_at": null,
            "created_by": "1",
            "updated_by": "1",
            "created_at": "2025-04-24T08:38:27.000000Z",
            "updated_at": "2025-05-27T00:34:10.000000Z",
            "image_url": "https://inventory.grozaarbd.com/storage/products/1748152728_1803200900_1.png",
            "barcode_image_url": "https://inventory.grozaarbd.com/storage/products/barcode/223423_17454838712.png",
            "rating": {
              "averageRating": "1.5",
              "totalReviewCount": 1
            },
            "created_at_human": "1 month"
          },
          "warehouse": {
            "id": 1,
            "name": "Main Warehouse",
            "code": "MWH",
            "company_name": null,
            "address": "123 Main St, Anytown, USA",
            "phone": "555-1234",
            "email": "d0BZt@example.com",
            "contact": null,
            "image": null,
            "is_default": true,
            "status": "active",
            "created_by": null,
            "updated_by": null,
            "created_at": "2025-04-24T02:25:21.000000Z",
            "updated_at": "2025-04-24T02:25:21.000000Z",
            "status_badge": "<span class=\"badge bg-success\">ACTIVE</span>"
          }
        }
      ],
      "customer": {
        "id": 12,
        "email": "nuruzzaman.himel147@gmail.com",
        "phone": "01622-819925",
        "type": "Customer",
        "avatar_url": "https://inventory.grozaarbd.com/storage/users/1747549497_1986011939_12.jpg",
        "full_name": "rest live ",
        "total_order_amount": "739.84",
        "total_paid_amount": "0.00",
        "total_due_amount": "739.84"
      },
      "order_histories": [
        {
          "status_title": "Pending",
          "status": true
        }
      ],
      "status": "pending"
    },
    "delivery_cost": 50
  }
}
*/

  bool? success;
  String? message;
  OrderDetailsResponseData? data;

  OrderDetailsResponse({
    this.success,
    this.message,
    this.data,
  });
  OrderDetailsResponse.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    message = json['message']?.toString();
    data = (json['data'] != null && (json['data'] is Map)) ? OrderDetailsResponseData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    data['message'] = message;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}